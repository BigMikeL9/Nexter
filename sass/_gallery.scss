.gallery {
  // --- Page Layout
  grid-column: full-content-start / full-content-end;
  // ------

  background-color: $color-grey-light-1;

  /* Important things to consider when creating a Gallery like this using CSS Grid-Layout: https://www.udemy.com/course/advanced-css-and-sass/learn/lecture/8859734#questions 
      1. What is the SMALLEST image/cell that we want to have in our Grid
      2. Make each column in the grid Layout equal to that image/cell width
      3. Make each row in the grid equal to that image/cell height 

*/
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  // --- ‚≠ê‚≠ê USING 'vw' inorder to make the row height scale with the screen-size width.
  grid-template-rows: repeat(7, 5vw);
  gap: 1.5rem;
  padding: 1.5rem;

  &__item {
    &--1 {
      // grid-column: 1 / 3;
      // grid-row: 1 / 3;

      // üëÜ Same as üëÜ
      grid-column: 1 / span 2;
      grid-row: 1 / span 2;
    }

    &--2 {
      grid-column: 3 / 6;
      grid-row: 1 / 4;
    }

    &--3 {
      grid-column: 6 / 7;
      grid-row: 1 / 3;
    }

    &--4 {
      grid-column: 7 / 9;
      grid-row: 1 / 3;
    }

    &--5 {
      grid-column: 1 / 3;
      grid-row: 3 / 6;
    }

    &--6 {
      grid-column: 3 / 5;
      grid-row: 4 / 6;
    }

    &--7 {
      grid-column: 5 / 6;
      grid-row: 4 / 5;
    }

    &--8 {
      grid-column: 6 / 8;
      grid-row: 3 / 5;
    }

    &--9 {
      grid-column: 8 / 9;
      grid-row: 3 / 6;
    }

    &--10 {
      grid-column: 1 / 2;
      grid-row: 6 / 8;
    }

    &--11 {
      grid-column: 2 / 4;
      grid-row: 6 / 8;
    }

    &--12 {
      grid-column: 4 / 5;
      grid-row: 6 / 8;
    }

    &--13 {
      grid-column: 5 / 8;
      grid-row: 5 / 8;
    }

    &--14 {
      grid-column: 8 / 9;
      grid-row: 6 / 8;
    }

    &-img {
      width: 100%;
      height: 100%;
      display: block; // To avoid having weird white space at edges due to the image being treated as an 'inline-block' element like text.

      object-fit: cover; // same as setting 'background-size: cover;' for background images. Image fills the entire container. ‚≠ê NEED TO BE IN IMAGE ELEMENT ITSELF ‚≠ê.
    }
  }
}
